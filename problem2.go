//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of teh even-valued terms.

/*

	+start with a function that calculates the first n terms of the fibonacci sequence
	-determine which term is the highest without exceeding four million
		(it's the 32nd)
	-create an array with values [1..the above number]
	-determine which ones are even with %
	-add all the even numbers together

*/

package main

import "fmt"

func fib(n int) []int {
	fibonacci := make([]int, n)
	fibonacci[0] = 1
	fibonacci[1] = 2
	for i := 2; i < len(fibonacci); i++ {
		fibonacci[i] = fibonacci[i-2] + fibonacci[i-1]
	}
	return fibonacci
}

func main() {
	var result int
	a := fib(32)
	for i := 0; i < len(a); i++ {
		if a[i]%2 == 0 {
			result += a[i]
		}
	}
	fmt.Println(result)
}
